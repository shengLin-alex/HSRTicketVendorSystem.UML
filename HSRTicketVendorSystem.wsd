@startuml HSRTicketVendorSystem

namespace HSRTicketVendorSystem {
    class Program {
        - IVendingService _vendingService

        + static void Main(string[] args)
    }

    HSRTicketVendorSystem.Service.IVendingService <.. Program
}

namespace HSRTicketVendorSystem.Model {

    enum TrainStationEnum {
        + Nangang
        + Taipei
        + Banqiao
        + Taoyuan
        + Hsinchu
        + Miaoli
        + Changhua
        + Yunlin
        + Chiayi
        + Tainan
        + Zuoying
    }

    enum TicketTypeEnum {
        + Adult
        + Child
        + Elder
    }

    enum ReservationTypeEnum {
        + Reserved
        + NonReserved
    }

    enum PaymentTypeEnum {
        + Cash
        + CreditCard
    }

    enum VendingTypeEnum {
        + Purchase
        + PickUp
    }

    class Payment {
        + PaymentTypeEnum PaymentTypeEnum { get; set; }
        + string PaymentToken { get; set; }
    }

    class TrainTicket {
        + string TicketId { get; set; }
        + TrainStationEnum StartPoint { get; set; }
        + TrainStationEnum Destination { get; set; }
        + string TrainNumber { get; set; }
        + PaymentTypeEnum PaymentType { get; set; }
        + TicketTypeEnum TicketType { get; set; }
        + ReservationTypeEnum ReservationType { get; set; }
        + DateTime ArrivalTime { get; set; }
        + DateTime DepartureTime { get; set; }
    }

    class TrainSeatReservation {
        + string SetId { get; set; }
        + bool IsServed { get; set; }
    }

    class TrainNode {
        + TrainStationEnum TrainStation { get; set; }
        + DateTime ArrivalTime { get; set; }
        + DateTime DepartureTime { get; set; }
    }

    class Train {
        + string TrainNumber { get; set; }
        + List<TrainNode> Route { get; set; }
        + List<TrainSeatReservation> { get; set; }
    }

    Train "1" *-- "1..*" TrainNode
    Train "1" *-- "1..*" TrainSeatReservation
}

namespace HSRTicketVendorSystem.Repository {
    interface IGenericRepository<TModel> {
        + TModel Get(Func<TModel, bool> predicate)
        + IEnumerable<TModel> GetAll()
        + bool Update(TModel target)
        + bool Delete(TModel target)
    }

    class TrainRepository {
        + Train Get(Func<Train, bool> predicate)
        + IEnumerable<Train> GetAll()
        + bool Update(Train target)
        + bool Delete(Train target)
    }

    IGenericRepository <|- TrainRepository
}

namespace HSRTicketVendorSystem.Service {
    interface IVendingUI {
        + void PrintMainMenu()
        + void PrintRequestMenu()
        + void PrintPickUpTicketMenu()
        + void PrintAvailableTrains()
        + void PrintPaymentMenu()
        + void PrintProcessing()
        + void PrintReceiptView()
    }

    interface IVendingService {
        + void Serve()
    }

    interface ITrainTicketBuilder {
        + TrainTicket GenerateTicket(VendingRepuest request)
    }

    interface IPaymentService {
        + PaymentResponse Pay(Payment payment)
    }

    interface IPaymentAPI {
        + PaymentAPIResponse verify(string paymentToken)
    }

    class CreditCardPaymentAPI {
        + PaymentAPIResponse verify(string paymentToken)
    }

    class CasherPaymentAPI {
        + PaymentAPIResponse verify(string paymentToken)
    }

    IPaymentAPI <|-up- CreditCardPaymentAPI
    IPaymentAPI <|-up- CasherPaymentAPI

    class ConsoleVendingUI {
        - VendingRequest _request
        - IGenericRepository<Train> _repository

        + ConsoleVendingUI(IGenericRepository<Train> repository)
        + void PrintMainMenu()
        + void PrintRequestMenu()
        + void PrintPickUpTicketMenu()
        + void PrintAvailableTrains()
        + void PrintPaymentMenu()
        + void PrintProcessing()
        + void PrintReceiptView()
        - List<Train> getAvailableTrain()
    }

    HSRTicketVendorSystem.Repository.IGenericRepository <.down. ConsoleVendingUI

    class VendingService {
        - IPaymentService _paymentService
        - IVendingUI _vendingUI
        - ITrainTicketBuilder _ticketBuilder

        + VendingService(IPaymentService paymentService, IVendingUI vendingUI)
        + void Serve()
        - VendingRequest BuildRequest()
    }

    ITrainTicketBuilder <.up. VendingService
    IPaymentService <.. VendingService
    IVendingUI <.. VendingService

    class PurchaseTrainTicketBuilder {
        - IGenericRepository<Train> _repository

        + PurchaseTrainTicketBuilder(IGenericRepository<Train> repository)
        + TrainTicket GenerateTicket(VendingRepuest request)
    }

    class PickUpTrainTicketBuilder {
        - IGenericRepository<Train> _repository

        + PickUpTrainTicketBuilder(IGenericRepository<Train> repository)
        + TrainTicket GenerateTicket(VendingRepuest request)
        - Train getPreorderTrainInfo(string pickUpCode, string pickUpVerifyCode)
    }

    HSRTicketVendorSystem.Repository.IGenericRepository <.right. PickUpTrainTicketBuilder

    class CreditCardPaymentService {
        - IPaymentAPI _paymentAPI

        + CreditCardPaymentService(IPaymentAPI paymentAPI)
        + PaymentResponse Pay(Payment payment)
        - BankAPIResponse verifyCreditCard(string paymentToken)
    }
    IPaymentAPI <.. CreditCardPaymentService

    class CashPaymentService {
        - IPaymentAPI _paymentAPI

        + CashPaymentService(IPaymentAPI paymentAPI)
        + PaymentResponse Pay(Payment payment)
        - CasherAPIResponse verifyCash(string paymentToken)
    }
    IPaymentAPI <.. CashPaymentService

    IVendingUI <|- ConsoleVendingUI
    IVendingService <|- VendingService
    ITrainTicketBuilder <|-up- PurchaseTrainTicketBuilder
    ITrainTicketBuilder <|-up- PickUpTrainTicketBuilder
    IPaymentService <|-left- CreditCardPaymentService
    IPaymentService <|-left- CashPaymentService
}

namespace HSRTicketVendorSystem.Service.Dto {
    class VendingRepuest {
        + VendingTypeEnum VendingType { get; set; }
        + TrainStationEnum StartPoint { get; set; }
        + TrainStationEnum Destination { get; set; }
        + PaymentTypeEnum PaymentType { get; set; }
        + TicketTypeEnum TicketType { get; set; }
        + ReservationTypeEnum ReservationType { get; set; }
        + DateTime ArrivalTime { get; set; }
        + DateTime DepartureTime { get; set; }
        + string PickUpCode { get; set; }
        + string PickUpVerifyCode { get; set; }
    }

    class PaymentResponse {
        + bool IsSuccess { get; set; }
        + PaymentAPIResponse APIResponse { get; set; }
    }

    class PaymentAPIResponse {
        + string Message { get; set; }
        + int Code { get; set; }
    }
}

HSRTicketVendorSystem.Service -[hidden]down- HSRTicketVendorSystem.Service.Dto
HSRTicketVendorSystem.Model -[hidden]up- HSRTicketVendorSystem.Repository

@enduml